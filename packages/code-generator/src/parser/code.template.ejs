const playwright = require("<%= usePlaywrightChromium ? "playwright-chromium" : "playwright" %>");
<% if (shouldRecordVideo) { %>
const { saveVideo } = require("playwright-video");
<% } %>

const { CrusherRunnerActions, handlePopup, registerCrusherSelectorEngine, GlobalManager, getBrowserActions, getMainActions } = require("<%= runnerUtilsPackagePath %>");

const globals = new GlobalManager();

const crusherRunnerActionManager = new CrusherRunnerActions(logManager, storageManager, "<%= baseAssetsPath %>", globals);

const browser = await playwright["<%= browserName %>"].launch(<%- JSON.stringify(defaultBrowserLaunchOptions) %>);

globals.set("browserContextOptions", <%- JSON.stringify(defaultBrowserContextOptions) %>);

const actions = <%- JSON.stringify(actions) %>
crusherRunnerActionManager.runActions(getBrowserActions(actions), browser);

browserContextOptions = globals.get("browserContextOptions");

browserContext = await browser.newContext({
  ...browserContextOptions,
});

browserContext.setDefaultNavigationTimeout(browserContextOptions.defaultNavigationTimeout);
browserContext.setDefaultTimeout(browserContextOptions.defaultTimeout);

const page = await browserContext.newPage({});
await handlePopup(page, browserContext);
await registerCrusherSelectorEngine();
<% if (shouldRecordVideo) { %>
const capturedVideo = await saveVideo(page, "/tmp/crusher/somedir/videos/video.mp4");
<% } %>

await crusherRunnerActionManager.runActions(getMainActions(actions), browser, page);
<% if (shouldRecordVideo) { %>
await capturedVideo.stop();
<% } %>
await browser.close();
